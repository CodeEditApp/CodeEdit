//
//  CodeLanguage.swift
//  
//
//  Created by Henry Chu on 25/3/2022.
//

import Foundation.NSURL

/// The language of a code codument.
public struct CodeLanguage {
    /// The language name used in highlightr.
    let name: String
    /// The human readable name of the langauage.
    let displayName: String
    /// The file name extensions of the language (in lowercase).
    let extensions: Set<String>
    /// Detects the language of the files form a given `URL`.
    /// - Parameter url: The `URL` of the file.
    /// - Returns: The `CodeLanguage` of the file.
    static func detectLanguageFromUrl(url: URL) -> CodeLanguage {
        let fileExtension = url.pathExtension.lowercased()
        let fileName = url.pathComponents.last?.lowercased()
        // This is to handle special file types without an extension (e.g., Makefile, Dockerfile)
        let fileNameOrExtension = fileExtension.isEmpty ? (fileName != nil ? fileName! : "") : fileExtension
        if let lang = knownLanguages.first(where: { lang in lang.extensions.contains(fileNameOrExtension)}) {
            return lang
        } else {
            return .default
        }
    }
    /// The default `CodeLanguage`, which is plain text.
    static let `default` = CodeLanguage(name: "plaintext", displayName: "Plain Text", extensions: ["txt"])
    private static let knownLanguages = [
        CodeLanguage(name: "abnf", displayName: "Abnf", extensions: ["abnf"]),
        CodeLanguage(name: "accesslog", displayName: "Access Log", extensions: ["accesslog"]),
        CodeLanguage(name: "actionscript", displayName: "Action Script", extensions: ["actionscript"]),
        CodeLanguage(name: "ada", displayName: "Ada", extensions: ["ada"]),
        CodeLanguage(name: "angelscript", displayName: "Angel Script", extensions: ["angelscript"]),
        CodeLanguage(name: "apache", displayName: "Apache Configuration", extensions: ["apache"]),
        CodeLanguage(name: "applescript", displayName: "Apple Script", extensions: ["applescript", "scpt", "scptd"]),
        CodeLanguage(name: "arcade", displayName: "Arcade", extensions: ["arcade"]),
        CodeLanguage(name: "c", displayName: "C", extensions: ["c", "h"]),
        CodeLanguage(name: "cpp", displayName: "C++", extensions: ["cpp", "cc", "hpp", "hxx"]),
        CodeLanguage(name: "arduino", displayName: "Arduino", extensions: ["arduino"]),
        CodeLanguage(name: "armasm", displayName: "ARM Assembly", extensions: ["armasm"]),
        CodeLanguage(name: "xml", displayName: "XML", extensions: ["xml"]),
        CodeLanguage(name: "asciidoc", displayName: "ASCII Doc", extensions: ["asciidoc"]),
        CodeLanguage(name: "aspectj", displayName: "Aspectj", extensions: ["aspectj"]),
        CodeLanguage(name: "autohotkey", displayName: "Auto Hotkey", extensions: ["autohotkey"]),
        CodeLanguage(name: "autoit", displayName: "Autoit", extensions: ["autoit"]),
        CodeLanguage(name: "avrasm", displayName: "Avrasm", extensions: ["avrasm"]),
        CodeLanguage(name: "awk", displayName: "Awk", extensions: ["awk"]),
        CodeLanguage(name: "axapta", displayName: "Axapta", extensions: ["axapta"]),
        CodeLanguage(name: "bash", displayName: "Bash", extensions: ["bash"]),
        CodeLanguage(name: "basic", displayName: "Basic", extensions: ["basic"]),
        CodeLanguage(name: "bnf", displayName: "Bnf", extensions: ["bnf"]),
        CodeLanguage(name: "brainfuck", displayName: "Brainfuck", extensions: ["brainfuck"]),
        CodeLanguage(name: "cal", displayName: "Cal", extensions: ["cal"]),
        CodeLanguage(name: "capnproto", displayName: "Capnproto", extensions: ["capnproto"]),
        CodeLanguage(name: "ceylon", displayName: "Ceylon", extensions: ["ceylon"]),
        CodeLanguage(name: "clean", displayName: "Clean", extensions: ["clean"]),
        CodeLanguage(name: "clojure", displayName: "Clojure", extensions: ["clojure"]),
        CodeLanguage(name: "cmake", displayName: "CMake", extensions: ["cmake"]),
        CodeLanguage(name: "coffeescript", displayName: "Coffeescript", extensions: ["coffeescript"]),
        CodeLanguage(name: "coq", displayName: "Coq", extensions: ["coq"]),
        CodeLanguage(name: "cos", displayName: "Cos", extensions: ["cos"]),
        CodeLanguage(name: "crmsh", displayName: "Crmsh", extensions: ["crmsh"]),
        CodeLanguage(name: "crystal", displayName: "Crystal", extensions: ["crystal"]),
        CodeLanguage(name: "cs", displayName: "C#", extensions: ["cs"]),
        CodeLanguage(name: "csp", displayName: "Csp", extensions: ["csp"]),
        CodeLanguage(name: "css", displayName: "CSS", extensions: ["css"]),
        CodeLanguage(name: "d", displayName: "D", extensions: ["d"]),
        CodeLanguage(name: "markdown", displayName: "Markdown", extensions: ["md", "markdown"]),
        CodeLanguage(name: "dart", displayName: "Dart", extensions: ["dart"]),
        CodeLanguage(name: "delphi", displayName: "Delphi", extensions: ["delphi"]),
        CodeLanguage(name: "diff", displayName: "Diff", extensions: ["diff"]),
        CodeLanguage(name: "django", displayName: "Django", extensions: ["django"]),
        CodeLanguage(name: "dns", displayName: "Dns", extensions: ["dns"]),
        CodeLanguage(name: "dockerfile", displayName: "Dockerfile", extensions: ["dockerfile"]),
        CodeLanguage(name: "dos", displayName: "Dos", extensions: ["bat", "cmd"]),
        CodeLanguage(name: "dsconfig", displayName: "Dsconfig", extensions: ["dsconfig"]),
        CodeLanguage(name: "dts", displayName: "Dts", extensions: ["dts"]),
        CodeLanguage(name: "dust", displayName: "Dust", extensions: ["dust"]),
        CodeLanguage(name: "ebnf", displayName: "Ebnf", extensions: ["ebnf"]),
        CodeLanguage(name: "elixir", displayName: "Elixir", extensions: ["elixir"]),
        CodeLanguage(name: "elm", displayName: "Elm", extensions: ["elm"]),
        CodeLanguage(name: "ruby", displayName: "Ruby", extensions: ["ruby"]),
        CodeLanguage(name: "erb", displayName: "Erb", extensions: ["erb"]),
        CodeLanguage(name: "erlang", displayName: "Erlang", extensions: ["erlang"]),
        CodeLanguage(name: "excel", displayName: "Excel", extensions: ["excel"]),
        CodeLanguage(name: "fix", displayName: "Fix", extensions: ["fix"]),
        CodeLanguage(name: "flix", displayName: "Flix", extensions: ["flix"]),
        CodeLanguage(name: "fortran", displayName: "Fortran", extensions: ["fortran"]),
        CodeLanguage(name: "fsharp", displayName: "F#", extensions: ["fsharp"]),
        CodeLanguage(name: "gams", displayName: "Gams", extensions: ["gams"]),
        CodeLanguage(name: "gauss", displayName: "Gauss", extensions: ["gauss"]),
        CodeLanguage(name: "gcode", displayName: "Gcode", extensions: ["gcode"]),
        CodeLanguage(name: "gherkin", displayName: "Gherkin", extensions: ["gherkin"]),
        CodeLanguage(name: "glsl", displayName: "GLSL", extensions: ["glsl"]),
        CodeLanguage(name: "gml", displayName: "Gml", extensions: ["gml"]),
        CodeLanguage(name: "go", displayName: "Go", extensions: ["go"]),
        CodeLanguage(name: "golo", displayName: "Golo", extensions: ["golo"]),
        CodeLanguage(name: "gradle", displayName: "Gradle", extensions: ["gradle"]),
        CodeLanguage(name: "groovy", displayName: "Groovy", extensions: ["groovy"]),
        CodeLanguage(name: "haml", displayName: "Haml", extensions: ["haml"]),
        CodeLanguage(name: "handlebars", displayName: "Handlebars", extensions: ["handlebars"]),
        CodeLanguage(name: "haskell", displayName: "Haskell", extensions: ["haskell"]),
        CodeLanguage(name: "haxe", displayName: "Haxe", extensions: ["haxe"]),
        CodeLanguage(name: "hsp", displayName: "Hsp", extensions: ["hsp"]),
        CodeLanguage(name: "htmlbars", displayName: "Htmlbars", extensions: ["htmlbars"]),
        CodeLanguage(name: "html", displayName: "HTML", extensions: ["html"]),
        CodeLanguage(name: "http", displayName: "HTTP", extensions: ["http"]),
        CodeLanguage(name: "hy", displayName: "Hy", extensions: ["hy"]),
        CodeLanguage(name: "inform7", displayName: "Inform7", extensions: ["inform7"]),
        CodeLanguage(name: "ini", displayName: "INI", extensions: ["ini"]),
        CodeLanguage(name: "irpf90", displayName: "Irpf90", extensions: ["irpf90"]),
        CodeLanguage(name: "isbl", displayName: "Isbl", extensions: ["isbl"]),
        CodeLanguage(name: "java", displayName: "Java", extensions: ["java"]),
        CodeLanguage(name: "javascript", displayName: "JavaScript", extensions: ["js"]),
        CodeLanguage(name: "json", displayName: "Json", extensions: ["json"]),
        CodeLanguage(name: "julia", displayName: "Julia", extensions: ["julia"]),
        CodeLanguage(name: "kotlin", displayName: "Kotlin", extensions: ["kt"]),
        CodeLanguage(name: "lasso", displayName: "Lasso", extensions: ["lasso"]),
        CodeLanguage(name: "ldif", displayName: "Ldif", extensions: ["ldif"]),
        CodeLanguage(name: "leaf", displayName: "Leaf", extensions: ["leaf"]),
        CodeLanguage(name: "less", displayName: "Less", extensions: ["less"]),
        CodeLanguage(name: "lisp", displayName: "Lisp", extensions: ["lisp"]),
        CodeLanguage(name: "livecodeserver", displayName: "LiveCode Server", extensions: ["livecodeserver"]),
        CodeLanguage(name: "livescript", displayName: "Livescript", extensions: ["livescript"]),
        CodeLanguage(name: "llvm", displayName: "LLVM", extensions: ["llvm"]),
        CodeLanguage(name: "lsl", displayName: "Lsl", extensions: ["lsl"]),
        CodeLanguage(name: "lua", displayName: "Lua", extensions: ["lua"]),
        CodeLanguage(name: "makefile", displayName: "Makefile", extensions: ["makefile"]),
        CodeLanguage(name: "mathematica", displayName: "Mathematica", extensions: ["mathematica"]),
        CodeLanguage(name: "matlab", displayName: "Matlab", extensions: ["matlab"]),
        CodeLanguage(name: "maxima", displayName: "Maxima", extensions: ["maxima"]),
        CodeLanguage(name: "mel", displayName: "Mel", extensions: ["mel"]),
        CodeLanguage(name: "mercury", displayName: "Mercury", extensions: ["mercury"]),
        CodeLanguage(name: "mipsasm", displayName: "Mipsasm", extensions: ["mipsasm"]),
        CodeLanguage(name: "mizar", displayName: "Mizar", extensions: ["mizar"]),
        CodeLanguage(name: "perl", displayName: "Perl", extensions: ["pl"]),
        CodeLanguage(name: "mojolicious", displayName: "Mojolicious", extensions: ["mojolicious"]),
        CodeLanguage(name: "monkey", displayName: "Monkey", extensions: ["monkey"]),
        CodeLanguage(name: "moonscript", displayName: "Moonscript", extensions: ["moonscript"]),
        CodeLanguage(name: "n1ql", displayName: "N1ql", extensions: ["n1ql"]),
        CodeLanguage(name: "nginx", displayName: "Nginx", extensions: ["nginx"]),
        CodeLanguage(name: "nimrod", displayName: "Nimrod", extensions: ["nimrod"]),
        CodeLanguage(name: "nix", displayName: "Nix", extensions: ["nix"]),
        CodeLanguage(name: "nsis", displayName: "NSIS", extensions: ["nsis"]),
        CodeLanguage(name: "objectivec", displayName: "Objective-C", extensions: ["objectivec"]),
        CodeLanguage(name: "ocaml", displayName: "OCaml", extensions: ["ocaml"]),
        CodeLanguage(name: "openscad", displayName: "Openscad", extensions: ["openscad"]),
        CodeLanguage(name: "oxygene", displayName: "Oxygene", extensions: ["oxygene"]),
        CodeLanguage(name: "parser3", displayName: "Parser3", extensions: ["parser3"]),
        CodeLanguage(name: "pf", displayName: "Pf", extensions: ["pf"]),
        CodeLanguage(name: "pgsql", displayName: "Pgsql", extensions: ["pgsql"]),
        CodeLanguage(name: "php", displayName: "PHP", extensions: ["php"]),
        .default, // Plain text
        CodeLanguage(name: "pony", displayName: "Pony", extensions: ["pony"]),
        CodeLanguage(name: "powershell", displayName: "PowerShell", extensions: ["powershell"]),
        CodeLanguage(name: "processing", displayName: "Processing", extensions: ["processing"]),
        CodeLanguage(name: "profile", displayName: "Profile", extensions: ["profile"]),
        CodeLanguage(name: "prolog", displayName: "Prolog", extensions: ["prolog"]),
        CodeLanguage(name: "properties", displayName: "Properties", extensions: ["properties"]),
        CodeLanguage(name: "protobuf", displayName: "Protobuf", extensions: ["protobuf"]),
        CodeLanguage(name: "puppet", displayName: "Puppet", extensions: ["puppet"]),
        CodeLanguage(name: "purebasic", displayName: "Purebasic", extensions: ["purebasic"]),
        CodeLanguage(name: "python", displayName: "Python", extensions: ["py"]),
        CodeLanguage(name: "q", displayName: "Q", extensions: ["q"]),
        CodeLanguage(name: "qml", displayName: "Qml", extensions: ["qml"]),
        CodeLanguage(name: "r", displayName: "R", extensions: ["r"]),
        CodeLanguage(name: "reasonml", displayName: "Reasonml", extensions: ["reasonml"]),
        CodeLanguage(name: "rib", displayName: "Rib", extensions: ["rib"]),
        CodeLanguage(name: "roboconf", displayName: "Roboconf", extensions: ["roboconf"]),
        CodeLanguage(name: "routeros", displayName: "Routeros", extensions: ["routeros"]),
        CodeLanguage(name: "rsl", displayName: "Rsl", extensions: ["rsl"]),
        CodeLanguage(name: "ruleslanguage", displayName: "Ruleslanguage", extensions: ["ruleslanguage"]),
        CodeLanguage(name: "rust", displayName: "Rust", extensions: ["rs"]),
        CodeLanguage(name: "sas", displayName: "Sas", extensions: ["sas"]),
        CodeLanguage(name: "scala", displayName: "Scala", extensions: ["scala"]),
        CodeLanguage(name: "scheme", displayName: "Scheme", extensions: ["scheme"]),
        CodeLanguage(name: "scilab", displayName: "Scilab", extensions: ["scilab"]),
        CodeLanguage(name: "scss", displayName: "SCSS", extensions: ["scss"]),
        CodeLanguage(name: "shell", displayName: "Shell", extensions: ["shell"]),
        CodeLanguage(name: "smali", displayName: "Smali", extensions: ["smali"]),
        CodeLanguage(name: "smalltalk", displayName: "Smalltalk", extensions: ["smalltalk"]),
        CodeLanguage(name: "sml", displayName: "Sml", extensions: ["sml"]),
        CodeLanguage(name: "sqf", displayName: "Sqf", extensions: ["sqf"]),
        CodeLanguage(name: "sql", displayName: "SQL", extensions: ["sql"]),
        CodeLanguage(name: "stan", displayName: "Stan", extensions: ["stan"]),
        CodeLanguage(name: "stata", displayName: "Stata", extensions: ["stata"]),
        CodeLanguage(name: "step21", displayName: "Step21", extensions: ["step21"]),
        CodeLanguage(name: "stylus", displayName: "Stylus", extensions: ["stylus"]),
        CodeLanguage(name: "subunit", displayName: "Subunit", extensions: ["subunit"]),
        CodeLanguage(name: "swift", displayName: "Swift", extensions: ["swift"]),
        CodeLanguage(name: "taggerscript", displayName: "Taggerscript", extensions: ["taggerscript"]),
        CodeLanguage(name: "yaml", displayName: "YAML", extensions: ["yaml", "yml"]),
        CodeLanguage(name: "tap", displayName: "Tap", extensions: ["tap"]),
        CodeLanguage(name: "tcl", displayName: "Tcl", extensions: ["tcl"]),
        CodeLanguage(name: "tex", displayName: "TeX", extensions: ["tex"]),
        CodeLanguage(name: "thrift", displayName: "Thrift", extensions: ["thrift"]),
        CodeLanguage(name: "tp", displayName: "Tp", extensions: ["tp"]),
        CodeLanguage(name: "twig", displayName: "Twig", extensions: ["twig"]),
        CodeLanguage(name: "typescript", displayName: "Typescript", extensions: ["ts"]),
        CodeLanguage(name: "vala", displayName: "Vala", extensions: ["vala"]),
        CodeLanguage(name: "vbnet", displayName: "Vbnet", extensions: ["vbnet"]),
        CodeLanguage(name: "vbscript", displayName: "Vbscript", extensions: ["vbscript"]),
        CodeLanguage(name: "verilog", displayName: "Verilog", extensions: ["verilog"]),
        CodeLanguage(name: "vhdl", displayName: "Vhdl", extensions: ["vhdl"]),
        CodeLanguage(name: "vim", displayName: "Vim", extensions: ["vim"]),
        CodeLanguage(name: "x86asm", displayName: "x86 Assembly", extensions: ["x86asm"]),
        CodeLanguage(name: "xl", displayName: "Xl", extensions: ["xl"]),
        CodeLanguage(name: "xquery", displayName: "Xquery", extensions: ["xquery"]),
        CodeLanguage(name: "zephir", displayName: "Zephir", extensions: ["zephir"]),
    ]
}
